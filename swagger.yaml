openapi: 3.0.0
info:
  title: E-Commerce API
  description: "Tasting API Development By Mahmoud Hamdi"
  contact: {}
  version: '1.0'
servers:
- url:  https://e-commerce-api-1812.onrender.com 
- url:  http://localhost:1812
paths:
  /api/v1/categories:
    post:
      tags:
      - Categories
      summary: Creates a new category
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                image: 
                  type: string
                  format: binary
              required:
                - name
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
    get:
      tags:
      - Categories
      summary: Retrieves a list of categories
      parameters:
        - name: limit
          in: query
          description: Maximum number of items to return
          schema:
            type: number
        - name: sort
          in: query
          description: Sort order of the items
          schema:
            type: string
        - name: page
          in: query
          description: Number of pages
          schema:
            type: number
        - name: fields
          in: query
          description: Fields selected
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/categories/{id}:
    get:
      tags:
      - Categories
      summary: Get Specific Category
      description: Retrieve the details of a specific category.
      parameters:
        - name: id
          in: path
          description: ID of the category to get specific category.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
    put:   
      tags:
      - Categories
      summary: Update Specific Category
      description: Update the details of a specific category.
      parameters:
        - name: id
          in: path
          description: ID of the category to updated.
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                image: 
                  type: string
                  format: binary
              required:
                - name
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
    delete:
      tags:
      - Categories
      summary: Delete a category by ID
      description: Delete a specific category by its ID.
      parameters:
        - name: id
          in: path
          description: ID of the category to be deleted.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/subcategories:
    post:
      tags:
      - SubCategories
      summary: Creates a new SubCategory
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                category:
                  type: string
              required:
                - name
                - category
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
    get:
      tags:
      - SubCategories
      summary: Retrieves a list of SubCategories
      parameters:
        - name: limit
          in: query
          description: Maximum number of items to return
          schema:
            type: number
        - name: sort
          in: query
          description: Sort order of the items
          schema:
            type: string
        - name: page
          in: query
          description: Number of pages
          schema:
            type: number
        - name: fields
          in: query
          description: Fields selected
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/subcategories/{id}:
    get:
      tags:
      - SubCategories
      summary: Get Specific SubCategories
      description: Retrieve the details of a specific SubCategories.
      parameters:
        - name: id
          in: path
          description: ID of the SubCategories to retrieve.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
    put:   
      tags:
      - SubCategories
      summary: Update Specific SubCategories
      description: Update the details of a specific SubCategories.
      parameters:
        - name: id
          in: path
          description: ID of the SubCategories to updated.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                category:
                  type: string
              required:
                - name
                - category
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
    delete:
      tags:
      - SubCategories
      summary: Delete Specific SubCategories
      description: Delete the details of a specific SubCategories.
      parameters:
        - name: id
          in: path
          description: ID of the SubCategories to deleted.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/brands:
    post:
      tags:
      - Brands
      summary: Creates a new brand
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                image: 
                  type: string
                  format: binary
              required:
                - name
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
    get:
      tags:
      - Brands
      summary: Retrieves a list of brands
      parameters:
        - name: limit
          in: query
          description: Maximum number of items to return
          schema:
            type: number
        - name: sort
          in: query
          description: Sort order of the items
          schema:
            type: string
        - name: page
          in: query
          description: Number of pages
          schema:
            type: number
        - name: fields
          in: query
          description: Fields selected
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/brands/{id}:
    get:
      tags:
      - Brands
      summary: Get Specific Brand
      description: Retrieve the details of a specific brand.
      parameters:
        - name: id
          in: path
          description: ID of the brand to get specific brand.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
    put:   
      tags:
      - Brands
      summary: Update Specific Brand
      description: Update the details of a specific brand.
      parameters:
        - name: id
          in: path
          description: ID of the brand to updated.
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                image: 
                  type: string
                  format: binary
              required:
                - name
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
    delete:
      tags:
      - Brands
      summary: Delete a brand by ID
      description: Delete a specific brand by its ID.
      parameters:
        - name: id
          in: path
          description: ID of the brand to be deleted.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/categories/{categoryId}/subcategories:
    post:
      tags:
      - Categories/Sub
      summary: Create Subcategory on Category
      parameters:
        - name: categoryId
          in: path
          description: ID of the category to get specific subcategories.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
              required:
                - name
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
    get:
      tags:
      - Categories/Sub
      summary: Get list of subcategories for specific category
      parameters:
        - name: categoryId
          in: path
          description: ID of the category to get specific subcategories.
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/users:
    post:
      tags:
      - User
      summary: Creates a new user
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                phone:
                  type: string
                profileImg: 
                  type: string
                  format: binary
                role:
                  type: string
                  enum: 
                    - user
                    - manager
                    - admin
                addresses:
                  type: object
                  properties:
                      alias:
                        type: string
                      details:
                        type: string
                      phone:
                        type: string
                      city:
                        type: string
                      postalCode:
                        type: string
              required:
                - name
                - email
                - password
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
    get:
      tags:
      - User
      summary: Retrieves a list of user
      parameters:
        - name: limit
          in: query
          description: Maximum number of items to return
          schema:
            type: number
        - name: sort
          in: query
          description: Sort order of the items
          schema:
            type: string
        - name: page
          in: query
          description: Number of pages
          schema:
            type: number
        - name: fields
          in: query
          description: Fields selected
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/users/{id}:
    get:
      tags:
      - User
      summary: Get Specific user
      description: Retrieve the details of a specific user.
      parameters:
        - name: id
          in: path
          description: ID of the user to get specific user.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
    put:   
      tags:
      - User
      summary: Update Specific user
      description: Update the details of a specific user.
      parameters:
        - name: id
          in: path
          description: ID of the user to updated.
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                phone:
                  type: string
                profileImg: 
                  type: string
                  format: binary
                role:
                  type: string
                  enum: 
                    - user
                    - manager
                    - admin
                addresses:
                  type: object
                  properties:
                      alias:
                        type: string
                      details:
                        type: string
                      phone:
                        type: string
                      city:
                        type: string
                      postalCode:
                        type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
    delete:
      tags:
      - User
      summary: Delete a user by ID
      description: Delete a specific user by its ID.
      parameters:
        - name: id
          in: path
          description: ID of the user to be deleted.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/users/changePassword/{id}:
    put:   
      tags:
      - User
      summary: Update Specific user
      description: Update the details of a specific user.
      parameters:
        - name: id
          in: path
          description: ID of the user to updated.
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                currentPassword:
                  type: string
                password:
                  type: string
                passwordConfirm:
                  type: string
              required:
              - currentPassword
              - password
              - passwordConfirm
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/auth/signup:
    post:
      tags:
      - Authentication
      summary: Register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                password:
                  type: string
                passwordConfirm:
                  type: string
              required:
                - name
                - email
                - password
                - passwordConfirm
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error]
  /api/v1/auth/login:
    post:
      tags:
      - Authentication
      summary: Login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
              required:
                - email
                - password
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
  /api/v1/auth/forgotPassword:
    post:
      tags:
      - Authentication
      summary: Forgot Password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
  /api/v1/auth/verifyResetCode:
    post:
      tags:
      - Authentication
      summary: Verify Reset Code
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                resetCode:
                  type: string
              required:
                - email
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
  /api/v1/auth/resetPassword:
    put:
      tags:
      - Authentication
      summary: Reset Password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                newPassword:
                  type: string
              required:
                - email
                - newPassword
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
  /api/v1/users/getMe:
    get:
      tags:
      - Get Logged User
      summary: Get Logged User Data
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/users/changeMyPassword:
    put:
      tags:
      - Get Logged User
      summary: Update Logged User Password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
              required:
                - password
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/users/updateMe:
    put:
      tags:
      - Get Logged User
      summary: Update Logged User Password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                email:
                  type: string
                phone:
                  type: string
              required:
                - password
                - email
                - phone
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/users/deleteMe:
    delete:
      tags:
      - Get Logged User
      summary: DisActivated Logged User Data
      responses:
        '204':
          description: NO CONTENT
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/products:
    post:
      tags:
      - Products
      summary: Creates a new product
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                quantity:
                  type: string
                price:
                  type: string
                imageCover: 
                  type: string
                  format: binary
                images:
                  type: array
                  items:
                    type: string
                    format: binary
                category:
                  type: string
                  format: ObjectId
                subcategories:
                  type: string
                  format: ObjectId
                brand:
                  type: string
                  format: ObjectId
                ratingsAverage:
                  type: number
                ratingsQuantity:
                  type: number
              required:
                - title
                - description
                - quantity
                - price
                - imageCover
                - category
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
    get:
      tags:
      - Products
      summary: Retrieves a list of products
      parameters:
        - name: limit
          in: query
          description: Maximum number of items to return
          schema:
            type: number
        - name: sort
          in: query
          description: Sort order of the items
          schema:
            type: string
        - name: page
          in: query
          description: Number of pages
          schema:
            type: number
        - name: fields
          in: query
          description: Fields selected
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/products/{id}:
    get:
      tags:
      - Products
      summary: Get Specific Product
      description: Retrieve the details of a specific product.
      parameters:
        - name: id
          in: path
          description: ID of the product to get specific product.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
    put:   
      tags:
      - Products
      summary: Update Specific product
      description: Update the details of a specific product.
      parameters:
        - name: id
          in: path
          description: ID of the product to updated.
          required: true
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                description:
                  type: string
                quantity:
                  type: string
                price:
                  type: string
                imageCover: 
                  type: string
                  format: binary
                images:
                  type: array
                  items:
                    type: string
                    format: binary
                category:
                  type: string
                  format: ObjectId
                subcategories:
                  type: string
                  format: ObjectId
                brand:
                  type: string
                  format: ObjectId
                ratingsAverage:
                  type: number
                ratingsQuantity:
                  type: number
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
    delete:
      tags:
      - Products
      summary: Delete a product by ID
      description: Delete a specific product by its ID.
      parameters:
        - name: id
          in: path
          description: ID of the product to be deleted.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/products/{productId}/reviews:
    post:
      tags:
      - Products/Reviews
      summary: Create Review on specific product
      parameters:
        - name: productId
          in: path
          description: ID of the product to get specific review.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                ratings:
                  type: number
                  format: flaot
              required:
                - name
                - ratings
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
    get:
      tags:
      - Products/Reviews
      summary: Get All Reviews on specific product
      parameters:
        - name: productId
          in: path
          description: ID of the product to get specific review.
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/reviews:
    post:
      tags:
      - Reviews
      summary: Create Review
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                ratings:
                  type: number
                product:
                  type: string
                user:
                  type: string
              required:
                - title
                - ratings
                - product
                - user
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
    get:
      tags:
      - Reviews
      summary: Get All Reviews
      parameters:
        - name: limit
          in: query
          description: Maximum number of items to return
          schema:
            type: number
        - name: sort
          in: query
          description: Sort order of the items
          schema:
            type: string
        - name: page
          in: query
          description: Number of pages
          schema:
            type: number
        - name: fields
          in: query
          description: Fields selected
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/reviews/{id}:
    get:
      tags:
      - Reviews
      summary: Get Spicefic Review
      description: Retrieve the details of a specific Review.
      parameters:
        - name: id
          in: path
          description: ID of the SubCategories to retrieve.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
    put:   
      tags:
      - Reviews
      summary: UpdateSpicefic Review
      description: Update the details of a specific review.
      parameters:
        - name: id
          in: path
          description: ID of the SubCategories to updated.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                ratings:
                  type: number
              required:
                - title
                - ratings
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
    delete:
      tags:
      - Reviews
      summary: Delete Spicefic Review
      description: Delete the details of a specific review.
      parameters:
        - name: id
          in: path
          description: ID of the SubCategories to deleted.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/wishlist:
    post:
      tags:
      - Wishlist
      summary: Add Product To Wishlist
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: string
              required:
              - productId
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
    get:
      tags:
      - Wishlist
      summary: Get Logged User Wishlist
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/wishlist/{productId}:
    delete:
      tags:
      - Wishlist
      summary: Delete Spicefic Review
      description: Delete the details of a specific wishlist.
      parameters:
        - name: productId
          in: path
          description: ID of the wishlist to deleted.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/addresses:
    post:
      tags:
      - Addresses
      summary: Add Address To User Addresses
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                alias:
                  type: string
                details:
                  type: string
                phone:
                  type: string
                city:
                  type: string
                postalCode:
                  type: string
              required:
              - productId
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
    get:
      tags:
      - Addresses
      summary: Get Logged User Addresses
      responses:
        '200':
          description: OK
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/addresses/{addressId}:
    delete:
      tags:
      - Addresses
      summary: Remove Address From User Addresses
      description: Delete the details of a specific address.
      parameters:
        - name: addressId
          in: path
          description: ID of the Address to deleted.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/coupons:
    post:
      tags:
      - Coupons
      summary: Create Coupon
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                expire:
                  type: string
                  format: date
                discount:
                  type: number
              required:
                - name
                - expire
                - discount
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
    get:
      tags:
      - Coupons
      summary: Get List Of Coupons
      parameters:
        - name: limit
          in: query
          description: Maximum number of items to return
          schema:
            type: number
        - name: sort
          in: query
          description: Sort order of the items
          schema:
            type: string
        - name: page
          in: query
          description: Number of pages
          schema:
            type: number
        - name: fields
          in: query
          description: Fields selected
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/coupons/{id}:
    get:
      tags:
      - Coupons
      summary: Get Specific coupon
      description: Retrieve the details of a specific coupon.
      parameters:
        - name: id
          in: path
          description: ID of the coupon to retrieve.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
    put:   
      tags:
      - Coupons
      summary: Update Specific coupon
      description: Update the details of a specific coupon.
      parameters:
        - name: id
          in: path
          description: ID of the SubCategories to updated.
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                expire:
                  type: string
                  format: date
                discount:
                  type: number
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
    delete:
      tags:
      - Coupons
      summary: Delete Specific coupon
      description: Delete the details of a specific coupon.
      parameters:
        - name: id
          in: path
          description: ID of the coupon to deleted.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/cart:
    post:
      tags:
      - Cart
      summary: Add Product To Cart
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: string
                  format: ObjectId
                color:
                  type: string
              required:
                - productId
                - color
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
    get:
      tags:
      - Cart
      summary: Get Looged User Cart
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
    delete:
      tags:
      - Cart
      summary: Clear Cart
      description: Clear Cart.
      responses:
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/cart/{itemId}:
    put:   
      tags:
      - Cart
      summary: Update Specific Cart Item Quantity
      description: Update the details of a specific cart item quantity.
      parameters:
        - name: itemId
          in: path
          description: ID of the cart to updated.
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: number
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
    delete:
      tags:
      - Cart
      summary: Remove Specific Cart Item
      description: Delete the details of a specific cart item.
      parameters:
        - name: itemId
          in: path
          description: ID of the cart to deleted.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/cart/applyCoupon:
    put:   
      tags:
      - Cart
      summary: Apply Coupon
      description: Apply Coupon.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                coupon:
                  type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/orders/{cartId}:
    post:
      tags:
      - Orders
      summary: Create Cash Order.
      parameters:
        - name: cartId
          in: path
          description: ID of the cart to created cash order.
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                shippingAddress:
                  type: object
                  properties:
                    details:
                      type: string
                    phone:
                      type: string
                    city:
                      type: string
                    postalCode:
                      type: string
              required:
                - shippingAddress
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/orders/{id}:
    get:
      tags:
      - Orders
      summary: Get Specific Order
      parameters:
        - name: id
          in: path
          description: ID of the cart to get specific order.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/orders:
    get:
      tags:
      - Orders
      summary: Get All Orders
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/orders/{id}/pay:
    put:   
      tags:
      - Orders
      summary: Update Order Status To Paid
      description: Update Order Status To Paid.
      parameters:
        - name: id
          in: path
          description: ID of the order to updated.
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: number
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/orders/{id}/deliver:
    put:   
      tags:
      - Orders
      summary: Update Order Status To Delivered
      description: Update Order Status To Delivered.
      parameters:
        - name: id
          in: path
          description: ID of the order to updated.
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                quantity:
                  type: number
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '404':
          description: Not Found
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
  /api/v1/orders/checkout-session/{cartId}:
    post:
      tags:
      - Orders
      summary: Get Checkout Session
      parameters:
        - name: cartId
          in: path
          description: ID of the cart to get Checkout Session.
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                shippingAddress:
                  type: object
                  properties:
                    details:
                      type: string
                    phone:
                      type: string
                    city:
                      type: string
                    postalCode:
                      type: string
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
        '401':
          description: Unauthorized
        '500' :
          description: Internal Server Error
      security:
        - bearerAuth: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

